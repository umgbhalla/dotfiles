webpackJsonp([53],{2503:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(2504)},2504:function(e,t,n){"use strict";var i=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),s=this&&this.__assign||function(){return(s=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++){t=arguments[n];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var a="MonetizationService",o=function(e){function t(t,n,i,s,o,r,c,p,u,l){var h=e.call(this,r)||this;h.$rootScope=t,h.authenticationService=n,h.constants=i,h.loggingService=o,h.orchestrationService=r,h.settingsService=c,h.utilityService=p,h.monetizationDatabase=u,h.$q=l,h.logger=o.newLogger(a);var g=new teamspace.services.DataManagerOptions(i.urls.monetizationService.products.type,function(e){return"products"});g.useTeamspaceTokens=!1,g.isTransient=!0,h.productListDataManager=s.registerManager(g);var v=new teamspace.services.DataManagerOptions(i.urls.monetizationService.assets.type,function(e){return"assets"});v.useTeamspaceTokens=!1,v.isTransient=!0,h.assetListDataManager=s.registerManager(v);var m=new teamspace.services.DataManagerOptions(i.urls.monetizationService.saasState.type,function(e){return e.setupUrlWithToken});m.useTeamspaceTokens=!1,m.isTransient=!0,h.saasStateDataManager=s.registerManager(m);var f=new teamspace.services.DataManagerOptions(i.urls.monetizationService.billingRegion.type,function(e){return"billingRegion"});f.useTeamspaceTokens=!1,f.isTransient=!0,h.billingRegionDataManager=s.registerManager(f);var d=new teamspace.services.DataManagerOptions(i.urls.monetizationService.supportedBillingRegions.type,function(e){return"countries"});return d.useTeamspaceTokens=!1,d.isTransient=!0,h.supportedBillingRegionsDataManager=s.registerManager(d),h.initializeOnAppLaunchAndReinit("launch"),h}return i(t,e),t.$inject=["$rootScope","authenticationService","constants","dataManagerService","loggingService","orchestrationService","settingsService","utilityService","monetizationDatabase","$q"],t.prototype.initializeOnAppLaunchAndReinit=function(e){this.logger.info("initializeOnAppLaunchAndReinit monetizationService: reason = {0}",e)},t.prototype.cleanupOnAppTeardown=function(e){this.logger.info("cleanupOnAppTeardown monetizationService: reason = {0}",e)},t.prototype.mtmaTelemetryIdentifier=function(){return a},t.prototype.getBillingRegion=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.billingRegion);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(n,t).then(function(t){var i={url:""+e.utilityService.combineUriComponents(n.endpointUri,n.billingRegionPath),method:"GET",timeout:1e3*n.productsHttpTimeoutSeconds,skipCommonHeaders:!0};return e.billingRegionDataManager.invoke(i,t)}).then(function(e){if(!e)throw"empty response from GetBillingRegion";var n=JSON.stringify(e);return t.appendEventData({responseData:n}),t.stop(),e}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),null})},t.prototype.getSupportedBillingRegions=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.supportBillingRegions);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(n,t).then(function(t){var i={url:""+e.utilityService.combineUriComponents(n.endpointUri,n.supportBillingRegionsPath),method:"GET",timeout:1e3*n.productsHttpTimeoutSeconds,skipCommonHeaders:!0};return e.supportedBillingRegionsDataManager.invoke(i,t)}).then(function(e){if(!e)throw"empty response from GetSupportedBillingRegions";var n=JSON.stringify(e);return t.appendEventData({responseData:n}),t.stop(),e}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),null})},t.prototype.getSaaSState=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.saaSState);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return n.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var i=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(i,n).then(function(n){var s={url:""+t.utilityService.combineUriComponents(i.endpointUri,i.assetSaaSStatePath,e),method:"GET",timeout:i.productsHttpTimeoutSeconds*t.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return t.saasStateDataManager.invoke(s,n)}).then(function(e){if(!e)throw"empty response from SaaSState API";return n.appendEventData({configUrl:e.setupUrlWithToken}),n.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),Promise.resolve(null)})},t.prototype.getProducts=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.products);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getMonetizationAppsListCache(n).then(function(i){return i?(t.appendEventData(s(s({},e.getMonetizationAppsListEventData(i)),{source:e.constants.scenarios.extensibility.monetization.cache.products})),t.stop(),i):e.getProductsFromAPI(n).then(function(n){if(!n)throw"empty response from Products API";return t.appendEventData(s(s({},e.getMonetizationAppsListEventData(n)),{source:e.constants.scenarios.extensibility.monetization.apis.products})),t.stop(),n})}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),Promise.resolve(null)})},t.prototype.getProductsFromAPI=function(e,t){var n=this,i=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.products);return this.generateDataManagerRequestOptions(e,i).then(function(i){var s=n.utilityService.combineUriComponents(e.endpointUri,e.productsPath);t&&(s=n.utilityService.appendQueryStringToUrl(s,e.billingRegionQueryString,t));var a={url:""+s,method:"GET",timeout:e.productsHttpTimeoutSeconds*n.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return n.productListDataManager.invoke(a,i)}).then(function(e){if(!e)throw"empty response from Products";return i.stop(),n.putMonetizationAppsListCache(e),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return i.fail({error:t,error2:t}),Promise.resolve(null)})},t.prototype.getAssets=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.assets);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getAssetsListCache(n).then(function(i){return i?(t.appendEventData(s(s({},e.getAssetsListEventData(i)),{source:e.constants.scenarios.extensibility.monetization.cache.assets})),t.stop(),i):e.getAssetsFromAPI(n).then(function(n){if(!n)throw"empty response from Assets API";return t.appendEventData(s(s({},e.getAssetsListEventData(n)),{source:e.constants.scenarios.extensibility.monetization.apis.assets})),t.stop(),n})}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),Promise.resolve(null)})},t.prototype.getAssetsFromAPI=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.apis.products);return this.generateDataManagerRequestOptions(e,n).then(function(n){var i={url:""+t.utilityService.combineUriComponents(e.endpointUri,e.assetsPath),method:"GET",timeout:e.assetsHttpTimeoutSeconds*t.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return t.assetListDataManager.invoke(i,n)}).then(function(e){if(!e)throw"empty response from Assets";return n.stop(),t.putAssetsListCache(e),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),Promise.resolve(null)})},t.prototype.getProductAndAssetDetails=function(e,t){var n=this,i=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.productAndAssetDetails);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return i.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var s=this.getProducts();if(t){var a=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);s=this.getProductsFromAPI(a,t)}return s.then(function(t){if(!t||0==t.length)return i.stop(),null;var s=t.find(function(t){return t&&t.associatedSaaSProducts&&t.associatedSaaSProducts.length>0&&t.officeProductId==e});return s?n.getAssets().then(function(e){var t=s.associatedSaaSProducts[0].saasBigCatalogId,n={officeProductName:s.officeProductName,officeProductId:s.officeProductId,associatedSaaSProducts:s.associatedSaaSProducts,activeSubscription:null};if(e&&e.length>0)for(var a=0;a<s.associatedSaaSProducts.length;a++){var o=s.associatedSaaSProducts[a];t=o.saasBigCatalogId;var r=e.find(function(e){return e&&e.isActive&&e.saasBigCatalogId==t});if(r)return n.activeSubscription=r,i.stop(),n}return i.stop(),n}):(i.stop(),null)})},t.prototype.generateDataManagerRequestOptions=function(e,t){var n=e.resourceUri;return this.authenticationService.getAuthToken(n).then(function(e){var n=new teamspace.services.DataManagerRequestOptions;return n.skipApply=!0,n.scenario=t,n.additionalHeaders={Authorization:"Bearer "+e.token},n})},t.prototype.open=function(){return this.isOpen?SkypeX.Services.SyncTasks.Resolved():this.monetizationDatabase.open()},Object.defineProperty(t.prototype,"isOpen",{get:function(){return this.monetizationDatabase.isOpen},enumerable:!0,configurable:!0}),t.prototype.getHashCode=function(e){if(e)return this.utilityService.djb2_hash(JSON.stringify(e))},t.prototype.validateCacheDataIntegrity=function(e,t){return!(!e||!t)&&t===this.getHashCode(e)},t.prototype.isCacheExpired=function(e,t){return!e||Math.abs((new Date).getTime()-e.getTime())>t*this.constants.timeInMiliseconds.second},t.prototype.getMonetizationAppsListCache=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.getMonetizationAppsListIndexedDB);return this.open().then(function(){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_apps_list.name,!1,"monetizationClientCache:getCachedMonetizationApps")}).then(function(e){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction}),e.store.openPrimaryKey().getAll()}).then(function(i){if(i&&i.length>0){var a=i[0];return a?a&&t.validateCacheDataIntegrity(a.products,a.hash)?t.isCacheExpired(a.insertedDate,e.maxProductsAssetsAgeSeconds)?null:(n.stop(s({},t.getMonetizationAppsListEventData(a.products))),a.products):(n.fail({error:"Hash check mismatch",error2:"Hash check mismatch"}),null):(n.stop({message:"No monetization apps list found in IndexedDB."}),null)}}).toNgPromise(this.$q).catch(function(e){var i=JSON.stringify(e);return t.logger.error("Failed to get monetization apps list from IndexedDb. Error: {0}",i),n.fail({error:i,error2:i}),null})},t.prototype.putMonetizationAppsListCache=function(e){var t=this,n=new Date,i={hash:this.getHashCode(e),insertedDate:n,products:e},s=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.setMonetizationAppsListIndexedDB);return this.open().then(function(){return t.clearMonetizationAppsListCache(s)}).then(function(){return s.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.clearMonetizationAppsList,step:"putMonetizationAppsListCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_apps_list.name,!0,"monetizationClientCache:setCachedMonetizationApps")}).then(function(e){return s.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"putMonetizationAppsListCache"}),e.store.put(i)}).then(function(){s.stop({message:"Saved new monetization apps list API response to IndexedDB"})}).catch(function(e){var n=JSON.stringify(e);return t.logger.error("Failed to set monetization apps list to IndexedDB. Error: "+n),s.fail({error:n,error2:n}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.clearMonetizationAppsListCache=function(e){var t=this;return this.open().then(function(){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection,step:"clearMonetizationAppsListCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_apps_list.name,!0,"monetizationClientCache:clearCachedMonetizationApps")}).then(function(n){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"clearMonetizationAppsListCache"}),SkypeX.Services.SyncTasks.whenAll([n.store.clearAllData()])}).catch(function(n){var i=JSON.stringify(n);return t.logger.error("Failed to clear cached monetization apps list from IndexedDB. Error: {0}",i),e.fail({error:i,error2:i}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.getAssetsListCache=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.getAssetsListIndexedDB);return this.open().then(function(){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_assets_list.name,!1,"monetizationClientCache:getCachedAssets")}).then(function(e){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction}),e.store.openPrimaryKey().getAll()}).then(function(i){if(i&&i.length>0){var a=i[0];return a?a&&t.validateCacheDataIntegrity(a.assets,a.hash)?t.isCacheExpired(a.insertedDate,e.maxProductsAssetsAgeSeconds)?null:(n.stop(s({},t.getAssetsListEventData(a.assets))),a.assets):(n.fail({error:"Hash check mismatch",error2:"Hash check mismatch"}),null):(n.stop({message:"No assets list found in IndexedDB."}),null)}}).toNgPromise(this.$q).catch(function(e){var i=JSON.stringify(e);return t.logger.error("Failed to get assets list from IndexedDb. Error: {0}",i),n.fail({error:i,error2:i}),null})},t.prototype.putAssetsListCache=function(e){var t=this,n=new Date,i={hash:this.getHashCode(e),insertedDate:n,assets:e},s=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.setAssetsListIndexedDB);return this.open().then(function(){return t.clearAssetsListCache(s)}).then(function(){return s.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.clearAssetsList,step:"putAssetsListCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_assets_list.name,!0,"monetizationClientCache:setCachedAssets")}).then(function(e){return s.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"putAssetsListCache"}),e.store.put(i)}).then(function(){s.stop({message:"Saved new assets list API response to IndexedDB"})}).catch(function(e){var n=JSON.stringify(e);return t.logger.error("Failed to set assets list to IndexedDB. Error: "+n),s.fail({error:n,error2:n}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.clearAssetsListCache=function(e){var t=this;return this.open().then(function(){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection,step:"clearAssetsListCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.monetization_assets_list.name,!0,"monetizationClientCache:clearCachedAssets")}).then(function(n){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"clearAssetsListCache"}),SkypeX.Services.SyncTasks.whenAll([n.store.clearAllData()])}).catch(function(n){var i=JSON.stringify(n);return t.logger.error("Failed to clear cached assets list from IndexedDB. Error: {0}",i),e.fail({error:i,error2:i}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.refreshMonetizationCache=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.refreshCache);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),Promise.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getProductsFromAPI(n).then(function(i){if(!i)throw"empty response from Products API";return e.getAssetsFromAPI(n).then(function(n){if(!n)throw"empty response from Assets API";return t.appendEventData(s(s({},e.getAssetsListEventData(n)),{source:e.constants.scenarios.extensibility.monetization.cache.refreshCache})),t.stop(),n})})},t.prototype.getMonetizationAppsListEventData=function(e){var t=this;if(e){var n=[];return e.forEach(function(e){n.push(t.getMonetizationPlansEventData(e))}),n}},t.prototype.getMonetizationPlansEventData=function(e){if(e)return{productId:e.officeProductId,name:e.officeProductName}},t.prototype.getAssetsListEventData=function(e){var t=this;if(e){var n=[];return e.forEach(function(e){n.push(t.getAssetEventData(e))}),n}},t.prototype.getAssetEventData=function(e){if(e)return{productId:e.saasBigCatalogId,purchaseStartDate:e.purchaseStartDate,licenseCount:e.licenseCount?e.licenseCount:0,isActive:!!e.isActive&&e.isActive}},t}(teamspace.services.MTMABase);t.MonetizationService=o,angular.module("teamspace.monetizationService",["skypeX.myUserPreferencesStore","teamspace.appState","teamspace.authenticationService","teamspace.constants","teamspace.dataManagerService","teamspace.localizationService","teamspace.loggingService","teamspace.orchestrationService","teamspace.settingsService","teamspace.utilityService","skypeX.clientDatabase"]).service("monetizationService",o)}},[2503]);